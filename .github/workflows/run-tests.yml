name: Run Postman Tests

# переменные окружения
env:
  ENDPOINT: ${{ secrets.ENDPOINT }}
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  TOKEN: ${{ secrets.TOKEN }}
  ALLURE_JOB_RUN_ID: ${{ github.event.inputs.ALLURE_JOB_RUN_ID }}
  ALLURE_RESULTS: "./out/allure-results"
  BROWSER: ${{ inputs.BROWSER || 'OperaGX' }}
  OS: ${{ inputs.OS || 'Win_11' }}
  BRANCH: ${{ github.ref_name }}

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      BROWSER:
        description: Browser
        required: false
        default: "OperaGX"
      OS:
        description: OS
        required: false
        default: "Win_11"
      ALLURE_JOB_RUN_ID:
        description: "ALLURE_JOB_RUN_ID - service parameter (leave blank)"
        required: false
        default: ""
      ALLURE_USERNAME:
        description: "ALLURE_USERNAME - service parameter (leave blank)"
        required: false
        default: ""

permissions: write-all

jobs:
  test:
    name: Run tests and generate Allure Report
    runs-on: ubuntu-latest

    steps:
      # Чекаут репозитория
      - name: Checkout repo
        uses: actions/checkout@v4.2.2
        
      - name: Install npm
        run: npm install
      
      # Установка Newman и Allure Reporter
      #- name: Install Newman and Allure Reporter
      #  run: |
      #    npm install -g newman
      #    npm install -g newman-reporter-allure

      # Установка allurectl
      - name: Install allurectl
        uses: allure-framework/setup-allurectl@v1
        with:
          allure-endpoint: ${{ env.ENDPOINT }}
          allure-token: ${{ env.TOKEN }}
          allure-project-id: ${{ env.PROJECT_ID }}

      # Удаляем старые директории
      - name: Remove old directories
        run: |
          rm -rf allure-results .allure

      # Создаем директорию для отчетов Allure
      - name: Create Allure results directory
        run: |
          mkdir -p ${{ env.ALLURE_RESULTS }}
          chmod -R 777 ${{ env.ALLURE_RESULTS }}

      # Проверяем, что директория пуста
      - name: Check if allure-results directory is empty
        run: ls -alh ${{ env.ALLURE_RESULTS }}

      # Запуск Postman коллекции без репортера Allure, чтобы проверить выполнение
      - name: Run Postman Collection (without Allure reporter)
        run: |
          newman run postman/collection.json \
            --env-var ENDPOINT=${{ env.ENDPOINT }} \
            --env-var TOKEN=${{ env.TOKEN }} \
            -r cli
        continue-on-error: true

      # Проверяем содержимое директории после выполнения тестов
      - name: Check Allure results directory after run (no Allure reporter)
        run: ls -alh ${{ env.ALLURE_RESULTS }}

      # Запуск Postman коллекции с репортером Allure
      #- name: Run Postman Collection with Allure Reporter
      #  run: |
      #    newman run postman/collection.json \
      #      --env-var ENDPOINT=${{ env.ENDPOINT }} \
      #      --env-var TOKEN=${{ env.TOKEN }} \
      #      -r junit \
      #      --reporter-junit-export ${{ env.ALLURE_RESULTS }} \
      #      --verbose
      #  continue-on-error: true

      # Запуск Postman коллекции с репортером Allure
      - name: Run Postman Collection with Allure Reporter
        run: 
          allurectl watch -- npm test
        continue-on-error: true

      # Дополнительная диагностика: проверим, есть ли какие-либо файлы отчета Allure
      - name: Check Allure report files after run
        run: |
          find ${{ env.ALLURE_RESULTS }} -type f
          
      - name: Generate Allure Report from JUnit XML
        run: |
          allure generate ${{ env.ALLURE_RESULTS }} --clean
        continue-on-error: true
          
      - name: Upload Allure Report to TestOps
        run: |
          allurectl upload ${{ env.ALLURE_RESULTS }}
