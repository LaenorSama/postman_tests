{
	"info": {
		"_postman_id": "73115df4-93dc-4da6-b5f2-d1818f4ac632",
		"name": "TestOps",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15533505",
		"_collection_link": "https://landeron-team.postman.co/workspace/My-Workspace~5b301d1f-af4c-4b52-89f6-fe1cca8e4679/collection/15533505-73115df4-93dc-4da6-b5f2-d1818f4ac632?action=share&source=collection_link&creator=15533505"
	},
	"item": [
		{
			"name": "Get assigned members",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{JWT_TOKEN}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{ENDPOINT}}/api/launch/1797/assignees",
					"host": [
						"{{ENDPOINT}}"
					],
					"path": [
						"api",
						"launch",
						"1797",
						"assignees"
					]
				}
			},
			"response": [],
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Get assigned members - –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ 200\", () => {",
							"    pm.expect(pm.response.code).to.eql(200);",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "Get projects",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{JWT_TOKEN}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{ENDPOINT}}/api/project?page=0&size=100&sort=name%2CASC",
					"host": [
						"{{ENDPOINT}}"
					],
					"path": [
						"api",
						"project"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "100"
						},
						{
							"key": "sort",
							"value": "name%2CASC"
						}
					]
				}
			},
			"response": [],
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Get projects - –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ 200\", () => {",
							"    pm.expect(pm.response.code).to.eql(200);",
							"});"
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.sendRequest({",
					"    url: \"https://demo.qatools.cloud/api/uaa/oauth/token\",",
					"    method: \"POST\",",
					"    header: {",
					"        \"Accept\": \"application/json\"",
					"    },",
					"    body: {",
					"        mode: \"urlencoded\",",
					"        urlencoded: [",
					"            { key: \"grant_type\", value: \"apitoken\", type: \"text\" },",
					"            { key: \"scope\", value: \"openid\", type: \"text\" },",
					"            { key: \"token\", value: pm.environment.get(\"TOKEN\"), type: \"text\" }",
					"        ]",
					"    }",
					"}, function (err, res) {",
					"    if (!err && res.json().access_token) {",
					"        var token = res.json().access_token;",
					"        pm.environment.set(\"JWT_TOKEN\", token);",
					"        console.log(\"Bearer-—Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω!\");",
					"    } else {",
					"        console.log(\"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞:\", err || res.text());",
					"    }",
					"});"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// üß™ –•—Ä–∞–Ω–∏–ª–∏—â–µ —Ç–µ—Å—Ç–æ–≤",
					"if (!pm.globals.has(\"testResults\")) {",
					"    pm.globals.set(\"testResults\", JSON.stringify([]));",
					"}",
					"",
					"let currentResults = JSON.parse(pm.globals.get(\"testResults\"));",
					"",
					"// ‚úÖ –¢–µ—Å—Ç: —Å—Ç–∞—Ç—É—Å 200",
					"var testName = pm.info.requestName + \" - –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ 200\";",  // <-- –ó–¥–µ—Å—å –≤–∫–ª—é—á–∞–µ—Ç—Å—è –∏–º—è –∑–∞–ø—Ä–æ—Å–∞
					"var passed = pm.response.code === 200;",
					"",
					"pm.test(testName, () => {",
					"    pm.expect(pm.response.code).to.eql(200);",
					"});",
					"",
					"// ‚è± –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞",
					"var responseTime = pm.response.responseTime;",
					"console.log(`‚è± –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: ${responseTime} –º—Å`);",
					"",
					"// üßæ –õ–æ–≥ –≤ –∫–æ–Ω—Å–æ–ª—å",
					"console.log(`üìã –¢–µ—Å—Ç—ã –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞: ${pm.info.requestName}`);",
					"console.log(`${passed ? \"‚úÖ\" : \"‚ùå\"} ${testName}`);",
					"",
					"// üì¶ –î–æ–±–∞–≤–∏–º –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ",
					"currentResults.push({",
					"    request: pm.info.requestName,",
					"    test: testName,",
					"    passed: passed,",
					"    status: pm.response.code,",
					"    time: responseTime",
					"});",
					"",
					"pm.globals.set(\"testResults\", JSON.stringify(currentResults));",
					"",
					"// üìà –û–±–Ω–æ–≤–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É",
					"var totalRequests = parseInt(pm.environment.get(\"totalRequests\") || \"0\") + 1;",
					"var totalTime = parseInt(pm.environment.get(\"totalTime\") || \"0\") + responseTime;",
					"",
					"pm.environment.set(\"totalRequests\", totalRequests);",
					"pm.environment.set(\"totalTime\", totalTime);",
					"pm.environment.set(\"avgTime\", (totalTime / totalRequests).toFixed(2));",
					"",
					"// üßæ –û—à–∏–±–∫–∏ (–¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞)",
					"if (!passed) {",
					"    var failures = pm.environment.get(\"failures\") || \"\";",
					"    failures += `\\n[${pm.info.requestName}] - —Å—Ç–∞—Ç—É—Å: ${pm.response.code}`;",
					"    pm.environment.set(\"failures\", failures);",
					"}"
				]
			}
		}
	]
}
