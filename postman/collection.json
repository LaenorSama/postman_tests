{
	"info": {
		"_postman_id": "73115df4-93dc-4da6-b5f2-d1818f4ac632",
		"name": "TestOps",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15533505",
		"_collection_link": "https://landeron-team.postman.co/workspace/My-Workspace~5b301d1f-af4c-4b52-89f6-fe1cca8e4679/collection/15533505-73115df4-93dc-4da6-b5f2-d1818f4ac632?action=share&source=collection_link&creator=15533505"
	},
	"item": [
		{
			"name": "Get assigned members",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{JWT_TOKEN}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{ENDPOINT}}/api/launch/1797/assignees",
					"host": [
						"{{ENDPOINT}}"
					],
					"path": [
						"api",
						"launch",
						"1797",
						"assignees"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get projects",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{JWT_TOKEN}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{ENDPOINT}}/api/project?page=0&size=100&sort=name%2CASC",
					"host": [
						"{{ENDPOINT}}"
					],
					"path": [
						"api",
						"project"
					],
					"query": [
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "size",
							"value": "100"
						},
						{
							"key": "sort",
							"value": "name%2CASC"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"// –í—ã–≤–æ–¥–∏–º –≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏\r",
					"// –æ—Ç–∫—Ä—ã—Ç—å –∫–æ–Ω—Å–æ–ª—å Windows/Linux: Ctrl + Alt + C\r",
					"// console.log(\"–í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: \", pm.environment.toObject());\r",
					"\r",
					"pm.sendRequest({\r",
					"    url: \"https://demo.qatools.cloud/api/uaa/oauth/token\", // URL –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –æ—Ç –≤–∞—à–µ–≥–æ –∏–Ω—Å—Ç–∞–Ω—Å–∞\r",
					"    method: \"POST\", // –ú–µ—Ç–æ–¥ HTTP –∑–∞–ø—Ä–æ—Å–∞ ‚Äî POST\r",
					"    header: {\r",
					"        \"Accept\": \"application/json\" // –ó–∞–≥–æ–ª–æ–≤–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –≥–æ–≤–æ—Ä–∏—Ç, —á—Ç–æ –æ–∂–∏–¥–∞–µ–º –æ—Ç–≤–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON\r",
					"    },\r",
					"    body: {\r",
					"        mode: \"urlencoded\", // –¢–∏–ø —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞ ‚Äî x-www-form-urlencoded\r",
					"        urlencoded: [\r",
					"            { key: \"grant_type\", value: \"apitoken\", type: \"text\" }, // –ü–∞—Ä–∞–º–µ—Ç—Ä grant_type —Å —Ç–∏–ø–æ–º apitoken\r",
					"            { key: \"scope\", value: \"openid\", type: \"text\" }, // –ü–∞—Ä–∞–º–µ—Ç—Ä scope\r",
					"            { key: \"token\", value: pm.environment.get(\"TOKEN\"), type: \"text\" } // –ò—Å–ø–æ–ª—å–∑—É–µ–º pm.environment.get –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π\r",
					"        ]\r",
					"    }\r",
					"}, function (err, res) {\r",
					"    if (!err && res.json().access_token) {\r",
					"        var token = res.json().access_token;\r",
					"        pm.environment.set(\"JWT_TOKEN\", token);\r",
					"        console.log(\"Bearer-—Ç–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω!\");\r",
					"    } else {\r",
					"        console.log(\"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞:\", err || res.text());\r",
					"    }\r",
					"});"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"// üß™ –•—Ä–∞–Ω–∏–ª–∏—â–µ —Ç–µ—Å—Ç–æ–≤\r",
					"if (!pm.globals.has(\"testResults\")) {\r",
					"    pm.globals.set(\"testResults\", JSON.stringify([]));\r",
					"}\r",
					"\r",
					"let currentResults = JSON.parse(pm.globals.get(\"testResults\"));\r",
					"\r",
					"// ‚úÖ –¢–µ—Å—Ç: —Å—Ç–∞—Ç—É—Å 200\r",
					"var testName = \"–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ 200\";\r",
					"var passed = pm.response.code === 200;\r",
					"\r",
					"pm.test(testName, () => {\r",
					"    pm.expect(pm.response.code).to.eql(200);\r",
					"});\r",
					"\r",
					"// ‚è± –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞\r",
					"var responseTime = pm.response.responseTime;\r",
					"console.log(`‚è± –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: ${responseTime} –º—Å`);\r",
					"\r",
					"// üßæ –õ–æ–≥ –≤ –∫–æ–Ω—Å–æ–ª—å\r",
					"console.log(`üìã –¢–µ—Å—Ç—ã –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞: ${pm.info.requestName}`);\r",
					"console.log(`${passed ? \"‚úÖ\" : \"‚ùå\"} ${testName}`);\r",
					"\r",
					"// üì¶ –î–æ–±–∞–≤–∏–º –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ (–ø–æ –∂–µ–ª–∞–Ω–∏—é ‚Äî –º–æ–∂–Ω–æ –≤ env)\r",
					"currentResults.push({\r",
					"    request: pm.info.requestName,\r",
					"    test: testName,\r",
					"    passed: passed,\r",
					"    status: pm.response.code,\r",
					"    time: responseTime\r",
					"});\r",
					"\r",
					"pm.globals.set(\"testResults\", JSON.stringify(currentResults));\r",
					"\r",
					"// üìà –û–±–Ω–æ–≤–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\r",
					"var totalRequests = parseInt(pm.environment.get(\"totalRequests\") || \"0\") + 1;\r",
					"var totalTime = parseInt(pm.environment.get(\"totalTime\") || \"0\") + responseTime;\r",
					"\r",
					"pm.environment.set(\"totalRequests\", totalRequests);\r",
					"pm.environment.set(\"totalTime\", totalTime);\r",
					"pm.environment.set(\"avgTime\", (totalTime / totalRequests).toFixed(2));\r",
					"\r",
					"// üßæ –û—à–∏–±–∫–∏ (–¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞)\r",
					"if (!passed) {\r",
					"    var failures = pm.environment.get(\"failures\") || \"\";\r",
					"    failures += `\\n[${pm.info.requestName}] - —Å—Ç–∞—Ç—É—Å: ${pm.response.code}`;\r",
					"    pm.environment.set(\"failures\", failures);\r",
					"}\r"
				]
			}
		}
	]
}
