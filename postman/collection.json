// üß™ –•—Ä–∞–Ω–∏–ª–∏—â–µ —Ç–µ—Å—Ç–æ–≤
if (!pm.globals.has("testResults")) {
    pm.globals.set("testResults", JSON.stringify([]));
}

let currentResults = JSON.parse(pm.globals.get("testResults"));

// –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å—ã
let logMessage = `–ó–∞–ø—Ä–æ—Å: ${pm.info.requestName}\n–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: ${pm.response.code}\n–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: ${pm.response.responseTime} –º—Å\n`;

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–≥ –∫–∞–∫ –≤–ª–æ–∂–µ–Ω–∏–µ
pm.test("Log attachment", function () {
    let logFileName = pm.info.requestName + "_log.txt";
    let logContent = logMessage + "\n\n----- Test Log End -----";

    // –°–æ–∑–¥–∞–µ–º –≤–ª–æ–∂–µ–Ω–∏–µ
    allure.addAttachment(logFileName, logContent, 'text/plain');
});

// ‚úÖ –¢–µ—Å—Ç: –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ 200 –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ "Get assigned members"
var testName = "–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ 200 –¥–ª—è Get assigned members";
var passed = pm.response.code === 200;

pm.test("Test: " + testName, () => {
    pm.expect(pm.response.code).to.eql(200);
});

// ‚è± –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞
var responseTime = pm.response.responseTime;
console.log(`‚è± –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ –¥–ª—è Get assigned members: ${responseTime} –º—Å`);

// üßæ –õ–æ–≥ –≤ –∫–æ–Ω—Å–æ–ª—å
console.log(`üìã –¢–µ—Å—Ç—ã –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞: ${pm.info.requestName}`);
console.log(`${passed ? "‚úÖ" : "‚ùå"} ${testName}`);

// üì¶ –î–æ–±–∞–≤–∏–º –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ (–ø–æ –∂–µ–ª–∞–Ω–∏—é ‚Äî –º–æ–∂–Ω–æ –≤ env)
currentResults.push({
    request: pm.info.requestName,
    test: testName,
    passed: passed,
    status: pm.response.code,
    time: responseTime
});

pm.globals.set("testResults", JSON.stringify(currentResults));

// üìà –û–±–Ω–æ–≤–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
var totalRequests = parseInt(pm.environment.get("totalRequests") || "0") + 1;
var totalTime = parseInt(pm.environment.get("totalTime") || "0") + responseTime;

pm.environment.set("totalRequests", totalRequests);
pm.environment.set("totalTime", totalTime);
pm.environment.set("avgTime", (totalTime / totalRequests).toFixed(2));

// üßæ –û—à–∏–±–∫–∏ (–¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞)
if (!passed) {
    var failures = pm.environment.get("failures") || "";
    failures += `\n[${pm.info.requestName}] - —Å—Ç–∞—Ç—É—Å: ${pm.response.code}`;
    pm.environment.set("failures", failures);
}


// ‚úÖ –¢–µ—Å—Ç: –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ 200 –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ "Get projects"
testName = "–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞ 200 –¥–ª—è Get projects";
passed = pm.response.code === 200;

pm.test("Test: " + testName, () => {
    pm.expect(pm.response.code).to.eql(200);
});

// ‚è± –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞
responseTime = pm.response.responseTime;
console.log(`‚è± –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ –¥–ª—è Get projects: ${responseTime} –º—Å`);

// üßæ –õ–æ–≥ –≤ –∫–æ–Ω—Å–æ–ª—å
console.log(`üìã –¢–µ—Å—Ç—ã –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞: ${pm.info.requestName}`);
console.log(`${passed ? "‚úÖ" : "‚ùå"} ${testName}`);

// üì¶ –î–æ–±–∞–≤–∏–º –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ (–ø–æ –∂–µ–ª–∞–Ω–∏—é ‚Äî –º–æ–∂–Ω–æ –≤ env)
currentResults.push({
    request: pm.info.requestName,
    test: testName,
    passed: passed,
    status: pm.response.code,
    time: responseTime
});

pm.globals.set("testResults", JSON.stringify(currentResults));

// üìà –û–±–Ω–æ–≤–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
totalRequests = parseInt(pm.environment.get("totalRequests") || "0") + 1;
totalTime = parseInt(pm.environment.get("totalTime") || "0") + responseTime;

pm.environment.set("totalRequests", totalRequests);
pm.environment.set("totalTime", totalTime);
pm.environment.set("avgTime", (totalTime / totalRequests).toFixed(2));

// üßæ –û—à–∏–±–∫–∏ (–¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞)
if (!passed) {
    failures = pm.environment.get("failures") || "";
    failures += `\n[${pm.info.requestName}] - —Å—Ç–∞—Ç—É—Å: ${pm.response.code}`;
    pm.environment.set("failures", failures);
}
